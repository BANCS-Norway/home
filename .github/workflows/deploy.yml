name: Deploy to GitHub Pages

on:
  workflow_run:
    workflows: ["Release"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # Check if a release was actually created
  check-release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    outputs:
      should-deploy: ${{ steps.check.outputs.should-deploy }}
    steps:
      - name: Check if release was created
        id: check
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Manual trigger - deploying"
            echo "should-deploy=true" >> $GITHUB_OUTPUT
          else
            # Get the commit SHA from the workflow run that triggered this
            COMMIT_SHA="${{ github.event.workflow_run.head_sha }}"
            echo "Checking if commit $COMMIT_SHA has a release tag..."

            # Check if this commit has a tag (semantic-release creates tags)
            TAG=$(git ls-remote --tags origin | grep "$COMMIT_SHA" | grep -v '\^{}' | awk '{print $2}' | sed 's|refs/tags/||' || echo "")

            if [ -n "$TAG" ]; then
              echo "Release tag found: $TAG - will deploy"
              echo "should-deploy=true" >> $GITHUB_OUTPUT
            else
              echo "No release tag found - skipping deployment"
              echo "should-deploy=false" >> $GITHUB_OUTPUT
            fi
          fi

  build:
    runs-on: ubuntu-latest
    needs: check-release
    if: ${{ needs.check-release.outputs.should-deploy == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main  # Always checkout main to get latest version after release

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        env:
          HUSKY: 0
        run: npm ci

      - name: Build with VitePress
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
