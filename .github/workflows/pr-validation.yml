name: PR Validation

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  validate:
    name: Validate PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Validate blog styles
        run: npm run validate:styles

      - name: Validate example licenses
        run: npm run validate:licenses

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Run accessibility tests
        run: npm run validate:accessibility

      - name: Verify commit message format
        run: |
          # Get all commits in the PR
          commits=$(git log --format=%s origin/main..HEAD)

          # Check if any commits follow conventional commit format
          if ! echo "$commits" | grep -qE '^(feat|fix|docs|style|refactor|test|chore)(\(.+\))?: .+'; then
            echo "❌ Error: PR must contain at least one commit following Conventional Commits format"
            echo ""
            echo "Valid formats:"
            echo "  feat: add new feature"
            echo "  fix: correct bug"
            echo "  docs: update documentation"
            echo "  style: formatting changes"
            echo "  refactor: code restructuring"
            echo "  test: add tests"
            echo "  chore: maintenance tasks"
            echo ""
            echo "Your commits:"
            echo "$commits"
            exit 1
          fi

          echo "✅ Conventional commit format validated"

  comment:
    name: Comment on PR
    runs-on: ubuntu-latest
    needs: validate
    if: success()
    permissions:
      pull-requests: write
    steps:
      - name: Comment success
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ All validation checks passed! Ready for review.'
            })
